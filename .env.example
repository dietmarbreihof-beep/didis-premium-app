# ===================================
# Didis Premium Trading Academy
# Environment Configuration Template
# ===================================

# WICHTIG: Kopieren Sie diese Datei zu .env und füllen Sie die Werte aus
# cp .env.example .env

# ===================================
# KRITISCHE SICHERHEITSEINSTELLUNGEN
# ===================================

# SECRET_KEY - MUSS in Production gesetzt sein!
# Generieren Sie einen sicheren Key mit:
# python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your-super-secret-key-here-min-32-characters

# Flask Environment
# Options: development, production
FLASK_ENV=development

# Flask Debug Mode
# Options: True, False
# WICHTIG: Muss in Production auf False sein!
FLASK_DEBUG=True

# ===================================
# DATENBANK
# ===================================

# Database URL
# Development (SQLite): Leer lassen oder auskommentieren
# Production (PostgreSQL): postgresql://user:password@host:port/dbname
# DATABASE_URL=postgresql://user:password@localhost:5432/didis_academy

# ===================================
# SESSION-KONFIGURATION
# ===================================

# Session Cookie Security (automatisch basierend auf FLASK_ENV)
# In Production wird SESSION_COOKIE_SECURE automatisch auf True gesetzt

# Session Lifetime in Sekunden (Standard: 7200 = 2 Stunden)
# PERMANENT_SESSION_LIFETIME=7200

# ===================================
# RATE LIMITING (Optional)
# ===================================

# Redis URL für Rate Limiting (Production empfohlen)
# Development: Verwendet In-Memory-Storage
# REDIS_URL=redis://localhost:6379

# ===================================
# EMAIL-KONFIGURATION (Optional)
# ===================================

# SMTP-Server für Email-Versand (für zukünftige Features)
# MAIL_SERVER=smtp.gmail.com
# MAIL_PORT=587
# MAIL_USE_TLS=True
# MAIL_USERNAME=your-email@example.com
# MAIL_PASSWORD=your-app-password

# ===================================
# MONITORING & LOGGING (Optional)
# ===================================

# Sentry DSN für Error Tracking (Production empfohlen)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Log Level
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
# LOG_LEVEL=INFO

# ===================================
# DEVELOPMENT-HINWEISE
# ===================================

# 1. Erstellen Sie .env: cp .env.example .env
# 2. Generieren Sie SECRET_KEY: python -c "import secrets; print(secrets.token_hex(32))"
# 3. Setzen Sie FLASK_ENV=development für lokale Entwicklung
# 4. Für Production: FLASK_ENV=production, FLASK_DEBUG=False

# ===================================
# PRODUCTION-CHECKLIST
# ===================================

# [ ] SECRET_KEY ist gesetzt und sicher (min. 32 Zeichen)
# [ ] FLASK_ENV=production
# [ ] FLASK_DEBUG=False
# [ ] DATABASE_URL zeigt auf PostgreSQL (nicht SQLite)
# [ ] REDIS_URL für Session-Storage konfiguriert
# [ ] SENTRY_DSN für Error-Tracking konfiguriert
# [ ] Email-Konfiguration korrekt
# [ ] Alle Passwörter sind sicher und nicht die Defaults
